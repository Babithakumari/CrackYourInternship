Given the root of a binary tree, imagine yourself standing on the right side of it, return the values of the nodes you can see ordered from top to bottom.

Approach:
first i thought that we need to add only right children
but 
  1
  /
  2 here both 1 and 2(left child) are visible.

Therefore, we need to do a level order traversal
On each level we need to take the right-most node.
and add it to result

     1
    / \
    2  3
   /   / 
   4   5

here at level 1: node 1
level 2: node 3
level 3: node 5

like rotten oranges.

CODE:

       if not root:
            return 
        cur = root
        res = []

        queue = deque()
        queue.append(root)
        res.append(root.val)

        while queue:
            for i in range(len(queue)):
                node = queue.popleft()

                if node.left:
                    queue.append(node.left)

                if node.right:
                    queue.append(node.right)

            if queue:
                node = queue.pop()
                res.append(node.val)
                queue.append(node)

        return res
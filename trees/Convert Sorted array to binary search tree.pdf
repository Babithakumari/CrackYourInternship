Given an integer array nums where the elements are sorted in ascending order, convert it to a
height-balanced
binary search tree.


Input: nums = [-10,-3,0,5,9]
Output: [0,-3,9,-10,null,5]
Explanation: [0,-10,5,null,-3,null,9] is also accepted:


Approach: binary search

-10 -3 0 5 9
L      M   R

M.left = Tree(L,M-1)
M.right = Tree(M+1, R)


CODE:
class Solution:
    def sortedArrayToBST(self, nums: List[int]) -> Optional[TreeNode]:

        def createTree(left, right):

            if left > right:
                return None

            mid = (left+right)//2
            newNode = TreeNode(nums[mid])
            newNode.left = createTree(left, mid-1)
            newNode.right = createTree(mid+1, right)

            return newNode


        return createTree(0, len(nums)-1)

       
Given the root of a binary tree, invert the tree, and return its root.


     4
   /  \
   2   7
  / \  / \
 1  3  6  9

BEcomes:

   4
   /  \
   7   2
  / \  / \
 9  6  3  1

 Approach:
 Traverse the tree to visit every node.
 for every node, exchange left and right subtrees, that is left subtree becomes right subtree and vice versa.

 Code:
        if not root:
            return 

        stack = []
        stack.append(root)

        while stack:
            node = stack.pop()

            node.left, node.right = node.right, node.left

            if node.left:
                stack.append(node.left)

            if node.right:
                stack.append(node.right)

        return root
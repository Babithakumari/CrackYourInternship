Given two integer arrays, preorder and postorder where preorder is the preorder traversal of a binary tree of distinct values and postorder is the postorder traversal of the same tree, reconstruct and return the binary tree.

If there exist multiple answers, you can return any of them.

 
 Approach
 preorder[0] == postorder[-1] becomes root
 preorder[1] comes to left of root, go to postorder, locate preorder[1], whatever comes to the left
 will act as the children of left node, and whatver comes after it will act as children of right node

 do this recursively.

 CODE:
        def construct(preorder, postorder):
            if not preorder:
                return

            root = TreeNode(preorder[0])

            if len(preorder)==1:
                return root

            i = 0
            while postorder[i] != preorder[1]:
                i+=1

            
            
            root.left = construct(preorder[1: i+2], postorder[:i+1])
            root.right = construct(preorder[i+2 :], postorder[i+1:-1])

            return root

       
        return construct(preorder, postorder)